{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Desktop/Side Hustle/treboni-portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/Side Hustle/treboni-portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/Side Hustle/treboni-portfolio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/Side Hustle/treboni-portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/Side Hustle/treboni-portfolio/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/Side Hustle/treboni-portfolio/src/components/About/index.js\";\nimport React, { PureComponent } from 'react';\n\nvar About =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(About, _PureComponent);\n\n  function About(props) {\n    var _this;\n\n    _classCallCheck(this, About);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(About).call(this, props));\n\n    _this.currencyFormat = function (num) {\n      return '$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n    };\n\n    _this.generateRandomTradePrice = function () {\n      var precision = 100; // 2 decimals\n\n      var tradePrice = Math.floor(Math.random() * (10 * precision - 1 * precision) + 1 * precision) / (1 * precision);\n      return tradePrice * 100; //account for 100 shares at that price\n    };\n\n    _this.calculateEarnings = function () {\n      var capital = 500;\n\n      var optionPrice = _this.generateRandomTradePrice();\n\n      var yearlyObj = []; // start with $500, you play $50 cons and cash out at 20% every day, assuming you ride the rest free.\n      // will only account for 4 days a week you win a trade\n      //year loop\n\n      for (var i = 1; i <= 50; i++) {\n        var weekObj = [];\n        var weeklyProfits = 0;\n\n        for (var j = 1; j < 6; i++) {\n          //week is beginning\n          if (i === 1) {\n            var titleObj = {\n              text: \"Week \".concat(i, \":\"),\n              dailyProfits: null,\n              weeklyProfits: null,\n              totalCapital: null\n            };\n            weekObj.push(titleObj);\n          } //week is over\n\n\n          if (i === 5) {\n            weeklyProfits = _this.currencyFormat(weeklyProfits);\n            var weekCompleteObj = {\n              text: \"Weekly profits: \",\n              dailyProfits: null,\n              weeklyProfits: weeklyProfits,\n              totalCapital: capital\n            };\n            weekObj.push(weekCompleteObj);\n          } //get the amount of cons you can buy\n\n\n          var howManyConsYouCanAfford = capital / optionPrice; //caps the cons you play at 50, don't want to play more than that   \n\n          var amountOfCons = howManyConsYouCanAfford > 50 ? 50 : howManyConsYouCanAfford; //make the trade\n\n          var totalCapitalInTrade = optionPrice * amountOfCons;\n          var profitAtTwentyPercent = totalCapitalInTrade * .2;\n\n          var cleanDailyProfits = _this.currencyFormat(profitAtTwentyPercent); //add to weekly profits\n\n\n          weeklyProfits += weeklyProfits + profitAtTwentyPercent;\n\n          var cleanWeeklyProfits = _this.currencyFormat(weeklyProfits); //convert to currency\n\n\n          var totalCapitalConverted = _this.currencyFormat(capital += profitAtTwentyPercent); //build obj for array\n\n\n          var dailyCapitalObj = {\n            text: \"Day \".concat(j),\n            dailyProfits: cleanDailyProfits,\n            weeklyProfits: cleanWeeklyProfits,\n            totalCapital: totalCapitalConverted\n          };\n          weekObj.push(dailyCapitalObj);\n        }\n\n        yearlyObj.push(weekObj);\n      }\n\n      return yearlyObj;\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(About, [{\n    key: \"render\",\n    value: function render() {\n      var earnings = this.calculateEarnings();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, earnings);\n    }\n  }]);\n\n  return About;\n}(PureComponent); // import React, { PureComponent } from 'react'\n// //styled\n// import Outer from './styled/Outer'\n// import AboutBio from './styled/AboutBio'\n// import AboutTitle from './styled/AboutTitle'\n// //components\n// import FancyTitle from '../../styled/FancyTitle'\n// export default class About extends PureComponent {\n// \tconstructor(props) {\n// \t\tsuper(props)\n// \t\tthis.state = {}\n// \t}\n// \tgetYears = () => {\n// \t\tlet today = new Date();\n// \t\tvar year = today.getFullYear();\n// \t\treturn year - 2017;\n// \t}\n// \trender() {\n// \t\tlet years = this.getYears();\n// \t\treturn (\n// \t\t\t<Outer>\n// \t\t\t\t<FancyTitle>The Man, the Myth, the Developer</FancyTitle>\n// \t\t\t\t<AboutTitle>What do I do?</AboutTitle>\n// \t\t\t\t<AboutBio>I am a full stack web developer located out of Columbus, Ohio. Over the last {years} years, \n// \t\t\t\t\tworking in both the private and public sectors, I have primarily worked with C#/.NET & Core web API, React, and AngularJS. \n// \t\t\t\t</AboutBio>\n// \t\t\t\t<AboutTitle>What do I do in my free time?</AboutTitle>\n// \t\t\t\t<AboutBio>\n// \t\t\t\t\tI absolutely love to cook. My favorite dish has to be Chicken Marsala. This dish has simple\n// \t\t\t\t\tingredients, but the final product is delicious.\n// \t\t\t\t</AboutBio>\n// \t\t\t\t<AboutBio>\n// \t\t\t\t\tI also enjoy playing the guitar. I am self taught (which means not very good), and my favorite guitarist\n// \t\t\t\t\tis John Frusciante of the Red Hot Chili Peppers. His playing style has always fascinated me, because he uses\n// \t\t\t\t\tthe triad chord progression; which is the same playing style used by Jimi Hendrix and John Mayor.\n// \t\t\t\t</AboutBio>\n// \t\t\t</Outer>\n// \t\t)\n// \t}\n// }\n\n\nexport { About as default };","map":{"version":3,"sources":["/Users/admin/Desktop/Side Hustle/treboni-portfolio/src/components/About/index.js"],"names":["React","PureComponent","About","props","currencyFormat","num","toFixed","replace","generateRandomTradePrice","precision","tradePrice","Math","floor","random","calculateEarnings","capital","optionPrice","yearlyObj","i","weekObj","weeklyProfits","j","titleObj","text","dailyProfits","totalCapital","push","weekCompleteObj","howManyConsYouCanAfford","amountOfCons","totalCapitalInTrade","profitAtTwentyPercent","cleanDailyProfits","cleanWeeklyProfits","totalCapitalConverted","dailyCapitalObj","state","earnings"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\n\nexport default class About extends PureComponent{\n    constructor(props){\n        super(props)\n        this.state = {}\n    }\n\n    currencyFormat = (num) => {\n        return '$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')              \n    }\n\n    generateRandomTradePrice = () => {\n        let precision = 100; // 2 decimals\n        let tradePrice = Math.floor(Math.random() * (10 * precision - 1 * precision) + 1 * precision) / (1 * precision);\n        return tradePrice * 100; //account for 100 shares at that price\n    }\n\n    calculateEarnings = () => {\n\n        let capital = 500;\n        let optionPrice = this.generateRandomTradePrice();\n        let yearlyObj = [];\n\n        // start with $500, you play $50 cons and cash out at 20% every day, assuming you ride the rest free.\n        // will only account for 4 days a week you win a trade\n\n        //year loop\n        for(let i = 1; i <= 50; i++){\n            let weekObj = [];\n            let weeklyProfits = 0;\n            \n            for(let j = 1; j < 6; i++){\n\n                //week is beginning\n                if(i === 1){\n                    let titleObj = {\n                        text: `Week ${i}:`,\n                        dailyProfits: null,\n                        weeklyProfits: null,\n                        totalCapital: null\n                    };\n                    weekObj.push(titleObj);\n                }\n\n                //week is over\n                if(i === 5){\n                    weeklyProfits = this.currencyFormat(weeklyProfits);\n                    let weekCompleteObj = {\n                        text: `Weekly profits: `,\n                        dailyProfits: null,\n                        weeklyProfits: weeklyProfits,\n                        totalCapital: capital\n                    };\n                    weekObj.push(weekCompleteObj);\n                }\n\n                //get the amount of cons you can buy\n                let howManyConsYouCanAfford = capital / optionPrice;\n                //caps the cons you play at 50, don't want to play more than that   \n                let amountOfCons = howManyConsYouCanAfford > 50 ? 50 : howManyConsYouCanAfford;\n                \n                //make the trade\n                let totalCapitalInTrade = optionPrice * amountOfCons;\n                let profitAtTwentyPercent = totalCapitalInTrade * .2;\n                let cleanDailyProfits = this.currencyFormat(profitAtTwentyPercent);\n\n                //add to weekly profits\n                weeklyProfits += weeklyProfits + profitAtTwentyPercent;\n                let cleanWeeklyProfits = this.currencyFormat(weeklyProfits);\n\n                //convert to currency\n                let totalCapitalConverted = this.currencyFormat(capital += profitAtTwentyPercent);\n\n                //build obj for array\n                let dailyCapitalObj = {\n                    text: `Day ${j}`,\n                    dailyProfits: cleanDailyProfits,\n                    weeklyProfits: cleanWeeklyProfits,\n                    totalCapital: totalCapitalConverted\n                };\n                \n                weekObj.push(dailyCapitalObj);\n            }\n\n            yearlyObj.push(weekObj);\n        }\n\n        return yearlyObj;\n    }\n\n    render(){\n\n        let earnings = this.calculateEarnings();\n\n        return(\n            <div>\n                {earnings}\n            </div>\n        )\n    }\n}\n\n// import React, { PureComponent } from 'react'\n\n// //styled\n// import Outer from './styled/Outer'\n// import AboutBio from './styled/AboutBio'\n// import AboutTitle from './styled/AboutTitle'\n\n// //components\n// import FancyTitle from '../../styled/FancyTitle'\n\n// export default class About extends PureComponent {\n// \tconstructor(props) {\n// \t\tsuper(props)\n// \t\tthis.state = {}\n// \t}\n\n// \tgetYears = () => {\n// \t\tlet today = new Date();\n// \t\tvar year = today.getFullYear();\n// \t\treturn year - 2017;\n// \t}\n\n// \trender() {\n// \t\tlet years = this.getYears();\n\n// \t\treturn (\n// \t\t\t<Outer>\n// \t\t\t\t<FancyTitle>The Man, the Myth, the Developer</FancyTitle>\n// \t\t\t\t<AboutTitle>What do I do?</AboutTitle>\n// \t\t\t\t<AboutBio>I am a full stack web developer located out of Columbus, Ohio. Over the last {years} years, \n// \t\t\t\t\tworking in both the private and public sectors, I have primarily worked with C#/.NET & Core web API, React, and AngularJS. \n// \t\t\t\t</AboutBio>\n// \t\t\t\t<AboutTitle>What do I do in my free time?</AboutTitle>\n// \t\t\t\t<AboutBio>\n// \t\t\t\t\tI absolutely love to cook. My favorite dish has to be Chicken Marsala. This dish has simple\n// \t\t\t\t\tingredients, but the final product is delicious.\n// \t\t\t\t</AboutBio>\n// \t\t\t\t<AboutBio>\n// \t\t\t\t\tI also enjoy playing the guitar. I am self taught (which means not very good), and my favorite guitarist\n// \t\t\t\t\tis John Frusciante of the Red Hot Chili Peppers. His playing style has always fascinated me, because he uses\n// \t\t\t\t\tthe triad chord progression; which is the same playing style used by Jimi Hendrix and John Mayor.\n// \t\t\t\t</AboutBio>\n// \t\t\t</Outer>\n// \t\t)\n// \t}\n// }\n"]},"metadata":{},"sourceType":"module"}