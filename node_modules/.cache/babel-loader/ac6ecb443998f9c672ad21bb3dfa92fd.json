{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Desktop/Side Hustle/treboni-portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Desktop/Side Hustle/treboni-portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/Side Hustle/treboni-portfolio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/Side Hustle/treboni-portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Desktop/Side Hustle/treboni-portfolio/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/Side Hustle/treboni-portfolio/src/components/About/index.js\";\nimport React, { PureComponent } from 'react';\n\nvar About =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(About, _PureComponent);\n\n  function About(props) {\n    var _this;\n\n    _classCallCheck(this, About);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(About).call(this, props));\n\n    _this.currencyFormat = function (num) {\n      return '$' + Number.parseFloat(num).toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n    };\n\n    _this.generateRandomTradePrice = function (capital) {\n      return capital < 1000 ? _this.generateNum(2) : capital < 8000 ? _this.generateNum(3) : capital < 15000 ? _this.generateNum(5) : capital < 25000 ? _this.generateNum(7) : _this.generateNum(8);\n    };\n\n    _this.generateNum = function (num) {\n      var precision = 100; // 2 decimals\n\n      var tradePrice = Math.floor(Math.random() * (num * precision - 1 * precision) + 1 * precision) / (1 * precision);\n      return tradePrice * 100; //account for 100 shares at that price\n    };\n\n    _this.calculateConsYouCanAfford = function (capital, optionPrice) {\n      debugger;\n      var howManyConsYouCanAfford = capital / optionPrice;\n      var rounded = howManyConsYouCanAfford % 0;\n      return rounded;\n    };\n\n    _this.calculateEarnings = function () {\n      var capital = 500;\n      var yearlyObj = []; // start with $500, you play $50 cons and cash out at 20% every day, assuming you ride the rest free.\n      // will only account for 4 days a week you win a trade\n      //year loop\n\n      for (var i = 1; i <= 50; i++) {\n        debugger;\n        var weekObj = [];\n        var weeklyProfits = 0;\n\n        for (var j = 1; j < 6; i++) {\n          //week is over\n          if (i === 5) {\n            weeklyProfits = _this.currencyFormat(weeklyProfits);\n            var weekCompleteObj = {\n              text: \"Weekly profits: \",\n              dailyProfits: null,\n              weeklyProfits: weeklyProfits,\n              totalCapital: capital\n            };\n            weekObj.push(weekCompleteObj);\n            debugger;\n          } else {\n            //week is beginning\n            if (i === 1) {\n              var titleObj = {\n                text: \"Week \".concat(i, \":\"),\n                dailyProfits: null,\n                weeklyProfits: null,\n                totalCapital: null\n              };\n              weekObj.push(titleObj);\n            }\n\n            var optionPrice = _this.generateRandomTradePrice(capital);\n\n            debugger; //get the amount of cons you can buy\n\n            var howManyConsYouCanAfford = _this.calculateConsYouCanAfford(capital, optionPrice); //caps the cons you play at 50, don't want to play more than that   \n\n\n            var amountOfCons = howManyConsYouCanAfford > 50 ? 50 : howManyConsYouCanAfford;\n            debugger; //make the trade\n\n            var totalCapitalInTrade = optionPrice * amountOfCons;\n            var profitAtTwentyPercent = totalCapitalInTrade * .2;\n\n            var cleanDailyProfits = _this.currencyFormat(profitAtTwentyPercent); //add to weekly profits\n\n\n            weeklyProfits += weeklyProfits + profitAtTwentyPercent;\n\n            var cleanWeeklyProfits = _this.currencyFormat(weeklyProfits);\n\n            debugger; //convert to currency\n\n            var totalCapitalConverted = _this.currencyFormat(capital += profitAtTwentyPercent); //build obj for array\n\n\n            var dailyCapitalObj = {\n              text: \"Day \".concat(j),\n              dailyProfits: cleanDailyProfits,\n              weeklyProfits: cleanWeeklyProfits,\n              totalCapital: totalCapitalConverted\n            };\n            weekObj.push(dailyCapitalObj);\n            debugger;\n          }\n        }\n\n        debugger;\n        yearlyObj.push(weekObj);\n      }\n\n      return yearlyObj;\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(About, [{\n    key: \"render\",\n    value: function render() {\n      var earnings = this.calculateEarnings();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, earnings);\n    }\n  }]);\n\n  return About;\n}(PureComponent); // import React, { PureComponent } from 'react'\n// //styled\n// import Outer from './styled/Outer'\n// import AboutBio from './styled/AboutBio'\n// import AboutTitle from './styled/AboutTitle'\n// //components\n// import FancyTitle from '../../styled/FancyTitle'\n// export default class About extends PureComponent {\n// \tconstructor(props) {\n// \t\tsuper(props)\n// \t\tthis.state = {}\n// \t}\n// \tgetYears = () => {\n// \t\tlet today = new Date();\n// \t\tvar year = today.getFullYear();\n// \t\treturn year - 2017;\n// \t}\n// \trender() {\n// \t\tlet years = this.getYears();\n// \t\treturn (\n// \t\t\t<Outer>\n// \t\t\t\t<FancyTitle>The Man, the Myth, the Developer</FancyTitle>\n// \t\t\t\t<AboutTitle>What do I do?</AboutTitle>\n// \t\t\t\t<AboutBio>I am a full stack web developer located out of Columbus, Ohio. Over the last {years} years, \n// \t\t\t\t\tworking in both the private and public sectors, I have primarily worked with C#/.NET & Core web API, React, and AngularJS. \n// \t\t\t\t</AboutBio>\n// \t\t\t\t<AboutTitle>What do I do in my free time?</AboutTitle>\n// \t\t\t\t<AboutBio>\n// \t\t\t\t\tI absolutely love to cook. My favorite dish has to be Chicken Marsala. This dish has simple\n// \t\t\t\t\tingredients, but the final product is delicious.\n// \t\t\t\t</AboutBio>\n// \t\t\t\t<AboutBio>\n// \t\t\t\t\tI also enjoy playing the guitar. I am self taught (which means not very good), and my favorite guitarist\n// \t\t\t\t\tis John Frusciante of the Red Hot Chili Peppers. His playing style has always fascinated me, because he uses\n// \t\t\t\t\tthe triad chord progression; which is the same playing style used by Jimi Hendrix and John Mayor.\n// \t\t\t\t</AboutBio>\n// \t\t\t</Outer>\n// \t\t)\n// \t}\n// }\n\n\nexport { About as default };","map":{"version":3,"sources":["/Users/admin/Desktop/Side Hustle/treboni-portfolio/src/components/About/index.js"],"names":["React","PureComponent","About","props","currencyFormat","num","Number","parseFloat","toFixed","replace","generateRandomTradePrice","capital","generateNum","precision","tradePrice","Math","floor","random","calculateConsYouCanAfford","optionPrice","howManyConsYouCanAfford","rounded","calculateEarnings","yearlyObj","i","weekObj","weeklyProfits","j","weekCompleteObj","text","dailyProfits","totalCapital","push","titleObj","amountOfCons","totalCapitalInTrade","profitAtTwentyPercent","cleanDailyProfits","cleanWeeklyProfits","totalCapitalConverted","dailyCapitalObj","state","earnings"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\n\nexport default class About extends PureComponent{\n    constructor(props){\n        super(props)\n        this.state = {}\n    }\n\n    currencyFormat = (num) => {\n        return '$' + Number.parseFloat(num).toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')              \n    }\n\n    generateRandomTradePrice = (capital) => {\n\t\treturn capital < 1000 ? this.generateNum(2) \n\t\t\t: capital < 8000 ? this.generateNum(3)\n\t\t\t: capital < 15000 ? this.generateNum(5)\n\t\t\t: capital < 25000 ? this.generateNum(7)\n\t\t\t: this.generateNum(8)\n\t}\n\t\n\tgenerateNum = (num) => {\n\t\tlet precision = 100; // 2 decimals\n\t\tlet tradePrice = Math.floor(Math.random() * (num * precision - 1 * precision) + 1 * precision) / (1 * precision);\n        return tradePrice * 100; //account for 100 shares at that price\n\t}\n\n\tcalculateConsYouCanAfford = (capital, optionPrice) => {\n\t\tdebugger\n\t\tlet howManyConsYouCanAfford = capital / optionPrice;\n\t\tlet rounded = howManyConsYouCanAfford % 0;\n\t\treturn rounded;\n\t}\n\n    calculateEarnings = () => {\n        let capital = 500;\n        let yearlyObj = [];\n\n        // start with $500, you play $50 cons and cash out at 20% every day, assuming you ride the rest free.\n        // will only account for 4 days a week you win a trade\n\n        //year loop\n        for(let i = 1; i <= 50; i++){\n\t\t\tdebugger\n            let weekObj = [];\n            let weeklyProfits = 0;\n            \n            for(let j = 1; j < 6; i++){\n                //week is over\n                if(i === 5){\n                    weeklyProfits = this.currencyFormat(weeklyProfits);\n                    let weekCompleteObj = {\n                        text: `Weekly profits: `,\n                        dailyProfits: null,\n                        weeklyProfits: weeklyProfits,\n                        totalCapital: capital\n                    };\n\t\t\t\t\tweekObj.push(weekCompleteObj);\n\t\t\t\t\tdebugger\n                } else {\n\n\t\t\t\t\t//week is beginning\n\t\t\t\t\tif(i === 1){\n\t\t\t\t\t\tlet titleObj = {\n\t\t\t\t\t\t\ttext: `Week ${i}:`,\n\t\t\t\t\t\t\tdailyProfits: null,\n\t\t\t\t\t\t\tweeklyProfits: null,\n\t\t\t\t\t\t\ttotalCapital: null\n\t\t\t\t\t\t};\n\t\t\t\t\t\tweekObj.push(titleObj);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet optionPrice = this.generateRandomTradePrice(capital);\n\n\t\t\t\t\tdebugger\n\n\t\t\t\t\t//get the amount of cons you can buy\n\t\t\t\t\tlet howManyConsYouCanAfford = this.calculateConsYouCanAfford(capital, optionPrice);\n\t\t\t\t\t//caps the cons you play at 50, don't want to play more than that   \n\t\t\t\t\tlet amountOfCons = howManyConsYouCanAfford > 50 ? 50 : howManyConsYouCanAfford;\n\t\t\t\t\t\n\t\t\t\t\tdebugger\n\n\t\t\t\t\t//make the trade\n\t\t\t\t\tlet totalCapitalInTrade = optionPrice * amountOfCons;\n\t\t\t\t\tlet profitAtTwentyPercent = totalCapitalInTrade * .2;\n\t\t\t\t\tlet cleanDailyProfits = this.currencyFormat(profitAtTwentyPercent);\n\t\n\t\t\t\t\t//add to weekly profits\n\t\t\t\t\tweeklyProfits += (weeklyProfits + profitAtTwentyPercent);\n\t\t\t\t\tlet cleanWeeklyProfits = this.currencyFormat(weeklyProfits);\n\t\t\t\t\t\n\t\t\t\t\tdebugger\n\t\t\t\t\t//convert to currency\n\t\t\t\t\tlet totalCapitalConverted = this.currencyFormat(capital += profitAtTwentyPercent);\n\t\n\t\t\t\t\t//build obj for array\n\t\t\t\t\tlet dailyCapitalObj = {\n\t\t\t\t\t\ttext: `Day ${j}`,\n\t\t\t\t\t\tdailyProfits: cleanDailyProfits,\n\t\t\t\t\t\tweeklyProfits: cleanWeeklyProfits,\n\t\t\t\t\t\ttotalCapital: totalCapitalConverted\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tweekObj.push(dailyCapitalObj);\n\t\t\t\t\tdebugger\n\t\t\t\t}\n\n            }\n\t\t\tdebugger\n            yearlyObj.push(weekObj);\n        }\n\n        return yearlyObj;\n    }\n\n    render(){\n\n        let earnings = this.calculateEarnings();\n\n        return(\n            <div>\n                {earnings}\n            </div>\n        )\n    }\n}\n\n// import React, { PureComponent } from 'react'\n\n// //styled\n// import Outer from './styled/Outer'\n// import AboutBio from './styled/AboutBio'\n// import AboutTitle from './styled/AboutTitle'\n\n// //components\n// import FancyTitle from '../../styled/FancyTitle'\n\n// export default class About extends PureComponent {\n// \tconstructor(props) {\n// \t\tsuper(props)\n// \t\tthis.state = {}\n// \t}\n\n// \tgetYears = () => {\n// \t\tlet today = new Date();\n// \t\tvar year = today.getFullYear();\n// \t\treturn year - 2017;\n// \t}\n\n// \trender() {\n// \t\tlet years = this.getYears();\n\n// \t\treturn (\n// \t\t\t<Outer>\n// \t\t\t\t<FancyTitle>The Man, the Myth, the Developer</FancyTitle>\n// \t\t\t\t<AboutTitle>What do I do?</AboutTitle>\n// \t\t\t\t<AboutBio>I am a full stack web developer located out of Columbus, Ohio. Over the last {years} years, \n// \t\t\t\t\tworking in both the private and public sectors, I have primarily worked with C#/.NET & Core web API, React, and AngularJS. \n// \t\t\t\t</AboutBio>\n// \t\t\t\t<AboutTitle>What do I do in my free time?</AboutTitle>\n// \t\t\t\t<AboutBio>\n// \t\t\t\t\tI absolutely love to cook. My favorite dish has to be Chicken Marsala. This dish has simple\n// \t\t\t\t\tingredients, but the final product is delicious.\n// \t\t\t\t</AboutBio>\n// \t\t\t\t<AboutBio>\n// \t\t\t\t\tI also enjoy playing the guitar. I am self taught (which means not very good), and my favorite guitarist\n// \t\t\t\t\tis John Frusciante of the Red Hot Chili Peppers. His playing style has always fascinated me, because he uses\n// \t\t\t\t\tthe triad chord progression; which is the same playing style used by Jimi Hendrix and John Mayor.\n// \t\t\t\t</AboutBio>\n// \t\t\t</Outer>\n// \t\t)\n// \t}\n// }\n"]},"metadata":{},"sourceType":"module"}